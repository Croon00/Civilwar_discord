name: Deploy to ECR and EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download config.json from S3
        run: |
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/${{ secrets.S3_CONFIG_KEY }} ./config.json

      - name: Build and tag Docker image (no cache)
        env:
          ECR_REGISTRY: 905418077180.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: civilwar-bot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Push Docker image to ECR
        env:
          ECR_REGISTRY: 905418077180.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: civilwar-bot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Logout from ECR
        run: |
          docker logout $ECR_REGISTRY

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Pull the latest Docker image on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.175.170.30 '
            ECR_REGISTRY=905418077180.dkr.ecr.us-east-1.amazonaws.com
            ECR_REPOSITORY=civilwar-bot
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
          '

      - name: Remove existing container (if any)
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.175.170.30 '
            docker rm -f civilwar-bot || true
          '

      - name: Deploy to EC2 and start new container
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.175.170.30 '
            docker run --init -d --name civilwar-bot \
            905418077180.dkr.ecr.us-east-1.amazonaws.com/civilwar-bot:latest
          '
